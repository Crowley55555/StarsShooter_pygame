import pygame
from settings import BULLET1_SIZE, BULLET2_SIZE, BULLET1_SPEED, BULLET2_SPEED
from utils import load_image


class Bullet(pygame.sprite.Sprite):
    """
    Класс Bullet представляет пулю в игре.
    Пуля может иметь разные типы (например, пуля первого типа или второго типа),
    каждый из которых имеет свои характеристики: размер, скорость и внешний вид.
    """

    def __init__(self, x, y, bullet_type):
        """
        Инициализирует новую пулю.

        :param x: Координата X начальной позиции пули.
        :param y: Координата Y начальной позиции пули.
        :param bullet_type: Тип пули (1 или 2). Определяет размер, скорость и внешний вид пули.
        """
        super().__init__()

        # Загрузка изображения и установка характеристик пули в зависимости от типа
        if bullet_type == 1:
            self.image = load_image('bullet1.png', BULLET1_SIZE)  # Загружаем изображение пули первого типа
            self.speed = BULLET1_SPEED  # Устанавливаем скорость пули первого типа
        elif bullet_type == 2:
            self.image = load_image('bullet2.png', BULLET2_SIZE)  # Загружаем изображение пули второго типа
            self.speed = BULLET2_SPEED  # Устанавливаем скорость пули второго типа

        # Установка начальной позиции пули
        self.rect = self.image.get_rect(center=(x, y))  # Размещаем пулю в указанной точке (x, y)

    def update(self):
        """
        Обновляет положение пули на экране.

        - Двигает пулю вверх по экрану с заданной скоростью.
        - Если пуля выходит за верхнюю границу экрана, она удаляется из игры.
        """
        self.rect.y -= self.speed  # Двигаем пулю вверх по оси Y

        # Проверяем, не вышла ли пуля за пределы экрана
        if self.rect.y < 0:  # Если координата Y меньше нуля (пуля вышла за верх экрана)
            self.kill()  # Удаляем пулю из игры


class Bullet2(pygame.sprite.Sprite):
    """
    Класс Bullet2 представляет второй тип пули в игре.
    Этот класс является альтернативной реализацией пули и может использоваться для других целей.
    """

    def __init__(self, x, y):
        """
        Инициализирует новую пулю второго типа.

        :param x: Координата X начальной позиции пули.
        :param y: Координата Y начальной позиции пули.
        """
        super().__init__()

        # Загрузка изображения пули
        self.image = pygame.image.load('assets/bullet2.png').convert_alpha()  # Загружаем изображение пули

        # Установка начальной позиции пули
        self.rect = self.image.get_rect()
        self.rect.centerx = x  # Устанавливаем центр пули по оси X
        self.rect.centery = y  # Устанавливаем центр пули по оси Y

        # Настройка скорости движения пули
        self.speed_y = -10  # Скорость движения пули по оси Y (отрицательное значение означает движение вверх)

    def update(self):
        """
        Обновляет положение пули на экране.

        - Двигает пулю вверх по экрану с заданной скоростью.
        - Если пуля выходит за верхнюю границу экрана, она удаляется из игры.
        """
        self.rect.y += self.speed_y  # Двигаем пулю вверх по оси Y

        # Проверяем, не вышла ли пуля за пределы экрана
        if self.rect.bottom < 0:  # Если нижняя часть пули вышла за верх экрана
            self.kill()  # Удаляем пулю из игры